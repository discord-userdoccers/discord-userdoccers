diff --git a/dist/vite-plugin-mdx.js b/dist/vite-plugin-mdx.js
index 64bca21ce776670413f0d4b192babd33c3f750be..93a3e43a3f3afe6a6fce4f5ba2eb0063069e3c19 100644
--- a/dist/vite-plugin-mdx.js
+++ b/dist/vite-plugin-mdx.js
@@ -3,6 +3,8 @@ import { getAstroMetadata } from "astro/jsx/rehype.js";
 import { VFile } from "vfile";
 import { createMdxProcessor } from "./plugins.js";
 import { parseFrontmatter } from "./utils.js";
+
+const bsmarker = "$FAKE_BACKSLASH_MARKER$";
 function vitePluginMdx(mdxOptions) {
   let processor;
   return {
@@ -32,6 +34,10 @@ function vitePluginMdx(mdxOptions) {
     // ex. inject layouts
     async transform(code, id) {
       if (!id.endsWith(".mdx")) return;
+	  code = code.replaceAll(/(<\/[a-zA-Z]+[^a-zA-Z>\s])|(<[a-zA-Z]*[^a-zA-Z>\s\/])/gm, (match) => bsmarker + "\\" + match);
+	  code = code.replaceAll(/{[a-zA-Z_0-9]/gm, (match) => bsmarker + "\\" + match);
+	  code = `import Alert from "@components/Alert.astro";
+import RouteHeader from "@components/RouteHeader.astro";\n\n` + code;
       const { data: frontmatter, content: pageContent } = parseFrontmatter(code, id);
       const vfile = new VFile({ value: pageContent, path: id });
       setVfileFrontmatter(vfile, frontmatter);
@@ -42,8 +48,11 @@ function vitePluginMdx(mdxOptions) {
       }
       try {
         const compiled = await processor.process(vfile);
+		let str = String(compiled.value);
+		str = str.replaceAll(bsmarker + "\\\\", "");
+		str = str.replaceAll(bsmarker, "");
         return {
-          code: String(compiled.value),
+          code: str,
           map: compiled.map,
           meta: getMdxMeta(vfile)
         };
